#version: '3.8'

services:
  # ----------------------------------------
  # 0. .env.example → .env kopyalayıcı servisi
  # ----------------------------------------
  copy-env:
    image: alpine
    restart: "no"
    volumes:
      - .:/app
    working_dir: /app
    command: >
      sh -c "
        if [ ! -f .env ]; then
          cp .env.example .env && echo '.env oluşturuldu';
        else
          echo '.env zaten var';
        fi
      "

  # ----------------------------------------
  # 1. Nginx Reverse Proxy Servisi
  # ----------------------------------------
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - copy-env
      - app
      - webhook

  # ----------------------------------------
  # 2. MySQL Veritabanı Servisi
  # ----------------------------------------
  mysql:
    image: mysql:8
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    volumes:
      - db_data:/var/lib/mysql
    depends_on:
      - copy-env

  # ----------------------------------------
  # 3. App Servisi (FastAPI)
  # ----------------------------------------
  app:
    build: ./app
    env_file: .env
    depends_on:
      - copy-env
      - mysql

  # ----------------------------------------
  # 4. Webhook Servisi (Flask)
  # ----------------------------------------
  webhook:
    build: ./webhook
    env_file: .env
    depends_on:
      - copy-env
      - mysql

volumes:
  db_data:
