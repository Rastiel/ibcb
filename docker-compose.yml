services:
  # ----------------------------------------
  # 1. Nginx Reverse Proxy Servisi
  # ----------------------------------------
  nginx:
    image: nginx:alpine            # Hafif Alpine tabanlı Nginx imajı
    ports:
      - "80:80"                    # Host 80 → Container 80 (HTTP)
      - "443:443"                  # Host 443 → Container 443 (HTTPS)
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
                                   # Local konfigürasyonları mount et
      - /etc/letsencrypt:/etc/letsencrypt:ro
                                   # Host’taki SSL sertifikalarını salt‐okunur olarak bağla
    depends_on:
      - app                        # app servisi hazır olana kadar bekle
      - webhook                    # webhook servisi hazır olana kadar bekle

  # ----------------------------------------
  # 2. MySQL Veritabanı Servisi
  # ----------------------------------------
  mysql:
    image: mysql:8                 # MySQL 8 imajı
    env_file: .env                 # Ortam değişkenlerini .env’den al
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
                                   # .env içindeki DB_PASS
      MYSQL_DATABASE: ${DB_NAME}   # .env içindeki DB_NAME
      MYSQL_USER: ${DB_USER}       # .env içindeki DB_USER
      MYSQL_PASSWORD: ${DB_PASS}   # .env içindeki DB_PASS
    volumes:
      - db_data:/var/lib/mysql     # Veritabanı dosyalarını named volume’da sakla

  # ----------------------------------------
  # 3. App Servisi (FastAPI)
  # ----------------------------------------
  app:
    build: ./app                   # ./app klasöründeki Dockerfile’dan imaj oluştur
    env_file: .env                 # .env içindeki değişkenleri kullan
    depends_on:
      - mysql                      # mysql servisi hazır olana kadar bekle

  # ----------------------------------------
  # 4. Webhook Servisi (Flask)
  # ----------------------------------------
  webhook:
    build: ./webhook               # ./webhook klasöründeki Dockerfile’dan imaj oluştur
    env_file: .env                 # .env içindeki değişkenleri kullan
    depends_on:
      - mysql                      # mysql servisi hazır olana kadar bekle

# ----------------------------------------
# Named Volumes: Kalıcı veri saklama alanları
# ----------------------------------------
volumes:
  db_data:                        # MySQL verilerini tutacak volume tanımı
